{"version":3,"sources":["pages/Header.js","pages/MidSection.js","pages/Bottom.js","pages/Home.js","pages/Burger.js","pages/Steak.js","pages/Dessert.js","pages/Menu.js","pages/About.js","pages/Reservation.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","MidSection","Bottom","Home","Component","Burger","Steak","Dessert","Menu","App","path","exact","render","About","strict","Reservation","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8RAwBeA,EAtBD,WACZ,OAAQ,yBAAKC,UAAU,eACvB,yBAAKA,UAAU,eACb,uBAAGA,UAAU,YAAYC,KAAK,KAA9B,mBAGA,yBAAKD,UAAU,gBACf,4BACA,4BACA,uBAAGC,KAAK,SAAR,SAEA,4BACA,uBAAGA,KAAK,UAAR,UAEA,4BACA,uBAAGA,KAAK,gBAAR,oBAAwC,uBAAGD,UAAU,+BCC1CE,EAhBG,WAChB,OAAQ,yBAAKF,UAAU,eACvB,yBAAKA,UAAU,cACf,yBAAKA,UAAU,YACf,0CACA,gDAAqB,6BAArB,gBAGA,yBAAKA,UAAU,qBACf,wBAAIA,UAAU,OAAd,kCACA,wBAAIA,UAAU,OAAd,kBACA,wBAAIA,UAAU,SAAd,wDC8BaG,EAzCD,WACZ,OAAQ,yBAAKH,UAAU,UACvB,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,eAEf,wBAAIA,UAAU,eAAd,aAGA,wBAAIA,UAAU,eAAd,qCAKA,yBAAKA,UAAU,cACf,yBAAKA,UAAU,kBACf,wBAAIA,UAAU,kBAAd,sBACA,wBAAIA,UAAU,kBAAd,qDAEA,yBAAKA,UAAU,YACf,yBAAKA,UAAU,cAEd,sCAED,yBAAKA,UAAU,YACf,yBAAKA,UAAU,cAEd,sCAED,yBAAKA,UAAU,cACf,yBAAKA,UAAU,gBAEd,sCAED,uBAAGA,UAAU,YAAYC,KAAK,SAA9B,uBCxBaG,E,iLAJb,OAAO,iCAAM,kBAAC,EAAD,MAAN,IAAgB,kBAAC,EAAD,MAAhB,IAA8B,kBAAC,EAAD,W,GAFpBC,aCEJC,EALD,WACZ,OAAQ,+CCIKC,EALF,WACX,OAAQ,+CCKKC,EANA,WACb,OAAQ,+CCQKC,E,iLAJb,OAAO,6BAAK,kBAAC,EAAD,MAAL,IAAe,kBAAC,EAAD,MAAf,IAAwB,kBAAC,EAAD,MAAxB,S,GAFUJ,aCKJD,E,iLAJb,OAAO,6BAAK,kBAAC,EAAD,MAAL,IAAe,kBAAC,EAAD,MAAf,S,GAFUC,aCMJD,E,iLAJb,OAAO,6BAAK,kBAAC,EAAD,MAAL,IAAe,kBAAC,EAAD,MAAf,S,GAFUC,a,gBC8CJK,MAxCf,WAEE,OACE,kBAAC,IAAD,KACA,yBAAKV,UAAU,OACf,kBAAC,IAAD,CAAOW,KAAK,SAASC,OAAK,EAACC,OACzB,WACE,OAAQ,kBAACC,EAAD,SAIZ,kBAAC,IAAD,CAAOH,KAAK,IAAIC,OAAK,EAACG,QAAM,EAACF,OAC3B,WACE,OAAQ,kBAAC,EAAD,SAIZ,kBAAC,IAAD,CAAOF,KAAK,QAAQC,OAAK,EAACG,QAAM,EAACF,OAC/B,WACE,OAAQ,+CAIZ,kBAAC,IAAD,CAAOF,KAAK,eAAeC,OAAK,EAACG,QAAM,EAACF,OACtC,WACE,OAAQ,kBAACG,EAAD,SAIV,kBAAC,IAAD,CAAOL,KAAK,QAAQC,OAAK,EAACG,QAAM,EAACF,OAC/B,WACE,OAAQ,kBAAC,EAAD,YC7BEI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAAST,OAAO,kBAAC,EAAD,MAASU,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.20590c95.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header =()=>{\r\n  return (<div className=\"top-section\">\r\n  <div className=\"header-logo\">\r\n    <a className=\"logo-name\" href=\"/\">Bon App√©tit</a>\r\n    </div>\r\n\r\n    <div className=\"header-pages\">\r\n    <ul>\r\n    <li>\r\n    <a href=\"/menu\">Menu</a>\r\n    </li>\r\n    <li>\r\n    <a href=\"/about\">About</a>\r\n    </li>\r\n    <li>\r\n    <a href=\"/reservation\">Make Reservation <i className=\"fas fa-chevron-right\"></i></a>\r\n    </li>\r\n    </ul>\r\n    </div>\r\n    </div>)\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst MidSection =()=>{\r\n  return (<div className=\"mid-section\">\r\n  <div className=\"header-img\">\r\n  <div className=\"img-text\">\r\n  <h2>Welcome To</h2>\r\n  <h5> Premium Cuisine <br/>Restaurant</h5>\r\n      </div>\r\n  </div>\r\n  <div className=\"header-img-extras\">\r\n  <h2 className=\"one\">Book a table with us directly:</h2>\r\n  <h2 className=\"two\">(123)-456-7889</h2>\r\n  <h2 className=\"three\">Opening hours: Mon-Fri:9am-11pm/ weekend:9am-12am</h2>\r\n  </div>\r\n    </div>)\r\n}\r\n\r\nexport default MidSection;\r\n","import React from 'react';\r\n\r\nconst Bottom =()=>{\r\n  return (<div className=\"bottom\">\r\n  <div className=\"bottom-content\">\r\n  <div className=\"bottom-part\">\r\n\r\n  <h1 className=\"bottom-text\">\r\n  Our Story\r\n  </h1>\r\n  <h1 className=\"bottom-text\">\r\n  Cooking is our way of expression\r\n  </h1>\r\n\r\n  </div>\r\n  <div className=\"bottom-img\">\r\n  <div className=\"featured-items\">\r\n  <h1 className=\"featured-text1\">Featured Favorites</h1>\r\n  <h1 className=\"featured-text1\"> Delicious Straight from the Grill for the Winter</h1>\r\n\r\n  <div className=\"feat-bgr\">\r\n  <div className=\"feat-bgrr\">\r\n  </div>\r\n   <h1>Hello</h1>\r\n  </div>\r\n  <div className=\"feat-stk\">\r\n  <div className=\"feat-stkk\">\r\n  </div>\r\n   <h1>Hello</h1>\r\n  </div>\r\n  <div className=\"feat-sweet\">\r\n  <div className=\"feat-sweett\">\r\n  </div>\r\n   <h1>Hello</h1>\r\n  </div>\r\n  <a className=\"view-menu\" href=\"/menu\">View Full Menu</a>\r\n  </div>\r\n  </div>\r\n\r\n  </div>\r\n    </div>)\r\n}\r\n\r\nexport default Bottom;\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport MidSection from './MidSection';\r\nimport Bottom from './Bottom';\r\n\r\nclass Home extends Component{\r\n  render (){\r\n  return <div> <Header/> <MidSection/> <Bottom/></div>\r\n}\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Burger =()=>{\r\n  return (<div> Welcome Home\r\n    </div>)\r\n}\r\n\r\nexport default Burger;\r\n","import React from 'react';\r\n\r\nconst Steak =()=>{\r\n  return (<div> Welcome Home\r\n    </div>)\r\n}\r\n\r\nexport default Steak;\r\n","import React from 'react';\r\n\r\nconst Dessert =()=>{\r\n  return (<div> Welcome Home\r\n\r\n    </div>)\r\n}\r\n\r\nexport default Dessert;\r\n","import React, { Component } from 'react';\r\nimport Burger from './Burger';\r\nimport Steak from './Steak';\r\nimport Dessert from './Dessert';\r\n\r\nclass Menu extends Component{\r\n  render (){\r\n  return <div><Burger/> <Steak/> <Dessert/> </div>\r\n}\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport MidSection from './MidSection';\r\n\r\nclass Home extends Component{\r\n  render (){\r\n  return <div><Header/> <MidSection/> </div>\r\n}\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport MidSection from './MidSection';\r\n\r\nclass Home extends Component{\r\n  render (){\r\n  return <div><Header/> <MidSection/> </div>\r\n}\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './pages/css/main.css';\nimport './pages/css/reset.css';\nimport Home from './pages/Home';\nimport Menu from './pages/Menu';\nimport About from './pages/About';\nimport Reservation from './pages/Reservation';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Route} from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <Router>\n    <div className=\"App\">\n    <Route path=\"/about\" exact render={\n      ()=>{\n        return (<About/>);\n      }\n\n    }/>\n    <Route path=\"/\" exact strict render={\n      ()=>{\n        return (<Home/>);\n      }\n\n    }/>\n    <Route path=\"/home\" exact strict render={\n      ()=>{\n        return (<h1>Welcome Home</h1>);\n      }\n\n    }/>\n    <Route path=\"/reservation\" exact strict render={\n      ()=>{\n        return (<Reservation/>);\n      }\n\n    }/>\n      <Route path=\"/menu\" exact strict render={\n        ()=>{\n          return (<Menu/>);\n        }\n\n      }/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}